#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/stackdriver_exporter
LOG_DIR=/var/vcap/sys/log/stackdriver_exporter
TMP_DIR=/var/vcap/sys/tmp/stackdriver_exporter
STORE_DIR=/var/vcap/store/stackdriver_exporter
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/stackdriver_exporter.pid

source /var/vcap/packages/stackdriver_exporter/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/stackdriver_exporter/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "stackdriver_exporter"
    echo $$ > ${PIDFILE}

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    <% if_p('stackdriver_exporter.google.application_credentials') do %>
    export GOOGLE_APPLICATION_CREDENTIALS="/var/vcap/jobs/stackdriver_exporter/config/goole_application_credentials.json"
    <% end %>

    exec stackdriver_exporter \
      <% if p('stackdriver_exporter.collector.fill_missing_labels') %> \
      --collector.fill-missing-labels \
      <% end %> \
      --google.project-id="<%= p('stackdriver_exporter.google.project_id') %>" \
      <% if p('stackdriver_exporter.monitoring.drop_delegated_projectsh') %> \
      --monitoring.drop-delegated-projects ]
      <% end %> \
      --monitoring.metrics-type-prefixes="<%= p('stackdriver_exporter.monitoring.metrics_type_prefixes') %>" \
      <% if_p('stackdriver_exporter.monitoring.metrics_interval') do |metrics_interval| %> \
      --monitoring.metrics-interval="<%= metrics_interval %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.monitoring.metrics_offset') do |metrics_offset| %> \
      --monitoring.metrics-offset="<%= metrics_offset %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.log_format') do |log_format| %> \
      --log.format="<%= log_format %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.stackdriver.max_retries') do |max_retries| %> \
      --stackdriver.max-retries="<%= max_retries %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.stackdriver.http_timeout') do |http_timeout| %> \
      --stackdriver.http-timeout="<%= http_timeout %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.stackdriver.max_backoff') do |max_backoff| %> \
      --stackdriver.max-backoff="<%= max_backoff %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.stackdriver.backoff_jitter') do |backoff_jitter| %> \
      --stackdriver.backoff-jitter="<%= backoff_jitter %>" \
      <% end %> \
      <% if_p('stackdriver_exporter.stackdriver.retry_statuses') do |retry_statuses| %> \
      --stackdriver.retry-statuses="<%= retry_statuses %>" \
      <% end %> \
      --web.listen-address=":<%= p('stackdriver_exporter.web.port') %>" \
      <% if_p('stackdriver_exporter.web.telemetry_path') do |telemetry_path| %> \
      --web.telemetry-path="<%= telemetry_path %>" \
      <% end %> \
      >>  ${LOG_DIR}/stackdriver_exporter.stdout.log \
      2>> ${LOG_DIR}/stackdriver_exporter.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
