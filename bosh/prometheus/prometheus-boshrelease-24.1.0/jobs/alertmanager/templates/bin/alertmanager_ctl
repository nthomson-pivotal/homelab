#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/alertmanager
LOG_DIR=/var/vcap/sys/log/alertmanager
TMP_DIR=/var/vcap/sys/tmp/alertmanager
STORE_DIR=/var/vcap/store/alertmanager
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/alertmanager.pid

source /var/vcap/packages/alertmanager/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/alertmanager/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "alertmanager"
    echo $$ > ${PIDFILE}

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    exec alertmanager \
      --config.file="/var/vcap/jobs/alertmanager/config/alertmanager.yml" \
      <% if_p('alertmanager.alerts.gc_interval') do |gc_interval| %> \
      --alerts.gc-interval="<%= gc_interval %>" \
      <% end %> \
      <% if_p('alertmanager.data.retention') do |retention| %> \
      --data.retention="<%= retention %>" \
      <% end %> \
      <% if_p('alertmanager.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      --cluster.listen-address=<%= "#{p('alertmanager.cluster.listen_address', spec.ip)}:#{p('alertmanager.mesh.port', p('alertmanager.cluster.port'))}" %> \
      <% if_p('alertmanager.cluster.advertise_address') do |address| %> \
      --cluster.advertise-address="<%= "#{address}:#{p('alertmanager.mesh.port', p('alertmanager.cluster.port'))}" %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.gossip_interval') do |gossip_interval| %> \
      --cluster.gossip-interval="<%= gossip_interval %>" \
      <% end %> \
      <% link('alertmanager').instances.each do |instance|  %> \
      --cluster.peer="<%= "#{instance.address}:#{link('alertmanager').p('alertmanager.mesh.port', p('alertmanager.cluster.port'))}" %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.peer_timeout') do |peer_timeout| %> \
      --cluster.peer-timeout="<%= peer_timeout %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.probe_interval') do |probe_interval| %> \
      --cluster.probe-interval="<%= probe_interval %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.probe_timeout') do |probe_timeout| %> \
      --cluster.probe-timeout="<%= probe_timeout %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.pushpull_interval') do |pushpull_interval| %> \
      --cluster.pushpull-interval="<%= pushpull_interval %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.reconnect_interval') do |reconnect_interval| %> \
      --cluster.reconnect-interval="<%= reconnect_interval %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.reconnect_timeout') do |reconnect_timeout| %> \
      --cluster.reconnect-timeout="<%= reconnect_timeout %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.settle_timeout') do |settle_timeout| %> \
      --cluster.settle-timeout="<%= settle_timeout %>" \
      <% end %> \
      <% if_p('alertmanager.cluster.tcp_timeout') do |tcp_timeout| %> \
      --cluster.tcp-timeout="<%= tcp_timeout %>" \
      <% end %> \
      --storage.path="${STORE_DIR}" \
      <% if_p('alertmanager.web.external_url') do |external_url| %> \
      --web.external-url="<%= external_url %>" \
      <% end %> \
      --web.listen-address=":<%= p('alertmanager.web.port') %>" \
      <% if_p('alertmanager.web.route_prefix') do |route_prefix| %> \
      --web.route-prefix="<%= route_prefix %>" \
      <% end %> \
      >>  ${LOG_DIR}/alertmanager.stdout.log \
      2>> ${LOG_DIR}/alertmanager.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
