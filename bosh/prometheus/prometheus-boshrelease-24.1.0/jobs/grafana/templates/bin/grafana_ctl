#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/grafana
LOG_DIR=/var/vcap/sys/log/grafana
TMP_DIR=/var/vcap/sys/tmp/grafana
STORE_DIR=/var/vcap/store/grafana
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/grafana.pid

source /var/vcap/packages/grafana/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/grafana/bin:${PATH}
export LD_LIBRARY_PATH=/var/vcap/packages/grafana/lib

case $1 in
  start)
    pid_guard ${PIDFILE} "grafana"

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    ulimit -n 65536

    exec grafana-server \
      -config=/var/vcap/jobs/grafana/config/grafana.ini \
      -homepath=/var/vcap/packages/grafana \
      -pidfile=${PIDFILE} \
      >>  ${LOG_DIR}/grafana.stdout.log \
      2>> ${LOG_DIR}/grafana.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
  ;;

esac
exit 0
