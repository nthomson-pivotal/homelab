#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/cf_exporter
LOG_DIR=/var/vcap/sys/log/cf_exporter
TMP_DIR=/var/vcap/sys/tmp/cf_exporter
STORE_DIR=/var/vcap/store/cf_exporter
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/cf_exporter.pid

source /var/vcap/packages/cf_exporter/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/cf_exporter/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "cf_exporter"
    echo $$ > ${PIDFILE}

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    exec cf_exporter \
      --cf.api_url="<%= p('cf_exporter.cf.api_url') %>" \
      <% if_p('cf_exporter.cf.username') do |username| %> \
      --cf.username="<%= username %>" \
      <% end %> \
      <% if_p('cf_exporter.cf.password') do |password| %> \
      --cf.password="<%= password %>" \
      <% end %> \
      <% if_p('cf_exporter.cf.client_id') do |client_id| %> \
      --cf.client-id="<%= client_id %>" \
      <% end %> \
      <% if_p('cf_exporter.cf.client_secret') do |client_secret| %> \
      --cf.client-secret="<%= client_secret %>" \
      <% end %> \
      --cf.deployment-name="<%= p('cf_exporter.cf.deployment_name') %>" \
      <% if p('cf_exporter.cf.api_v3_enabled') %> \
      --cf.api-v3-enabled \
      <% end %> \
      <% if_p('cf_exporter.events.query') do |query| %> \
      --events.query="<%= query %>" \
      <% end %> \
      <% if_p('cf_exporter.filter.collectors') do |collectors| %> \
      --filter.collectors="<%= collectors %>" \
      <% end %> \
      <% if_p('cf_exporter.log_format') do |log_format| %> \
      --log.format="<%= log_format %>" \
      <% end %> \
      <% if_p('cf_exporter.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      <% if_p('cf_exporter.metrics.namespace') do |namespace| %> \
      --metrics.namespace="<%= namespace %>" \
      <% end %> \
      --metrics.environment="<%= p('cf_exporter.metrics.environment') %>" \
      <% if p('cf_exporter.skip_ssl_verify') %> \
      --skip-ssl-verify \
      <% end %> \
      --web.listen-address=":<%= p('cf_exporter.web.port') %>" \
      <% if_p('cf_exporter.web.telemetry_path') do |telemetry_path| %> \
      --web.telemetry-path="<%= telemetry_path %>" \
      <% end %> \
      <% if_p('cf_exporter.web.auth_username') do |auth_username| %> \
      --web.auth.username="<%= auth_username %>" \
      <% end %> \
      <% if_p('cf_exporter.web.auth_password') do |auth_password| %> \
      --web.auth.password="<%= auth_password %>" \
      <% end %> \
      <% if_p('cf_exporter.web.tls_cert', 'cf_exporter.web.tls_key') do %> \
      --web.tls.cert_file="/var/vcap/jobs/cf_exporter/config/web_tls_cert.pem" \
      --web.tls.key_file="/var/vcap/jobs/cf_exporter/config/web_tls_key.pem" \
      <% end %> \
      >>  ${LOG_DIR}/cf_exporter.stdout.log \
      2>> ${LOG_DIR}/cf_exporter.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
